{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "keyVaultName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the Vault"
      }
    },
    "objectIdSecurityTeam": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Object Id of the Security Team AD group. Get using Get-AzureRmADGroup cmdlet"
      }
    },
    "keysPermissionsSecurityTeam": {
      "type": "array",
      "defaultValue": [ "backup", "create", "delete", "get", "import", "list", "restore" ],
      "metadata": {
        "description": "Permissions to keys in the vault for Security Team AD group. Valid values are: all, create, import, update, get, list, delete, backup, restore, encrypt, decrypt, wrapkey, unwrapkey, sign, and verify."
      }
    },
    "secretsPermissionsSecurityTeam": {
      "type": "array",
      "defaultValue": [ "all" ],
      "metadata": {
        "description": "Permissions to secrets in the vault for Security Team AD group. Valid values are: all, get, set, list, and delete."
      }
    },
    "objectIdDevOps": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Object Id of the DevOps Team AD group. Get using Get-AzureRmADGroup cmdlet"
      }
    },
    "keysPermissionsDevOps": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Permissions to keys in the vault for DevOps Team AD group. Valid values are: all, create, import, update, get, list, delete, backup, restore, encrypt, decrypt, wrapkey, unwrapkey, sign, and verify."
      }
    },
    "secretsPermissionsDevOps": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Permissions to secrets in the vault for DevOps Team AD group. Valid values are: all, get, set, list, and delete."
      }
    },
    "objectIdAuditors": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Object Id of the Auditors Team AD group. Get using Get-AzureRmADGroup cmdlet"
      }
    },
    "keysPermissionsAuditors": {
      "type": "array",
      "defaultValue": [ "list" ],
      "metadata": {
        "description": "Permissions to keys in the vault for Auditors Team AD group. Valid values are: all, create, import, update, get, list, delete, backup, restore, encrypt, decrypt, wrapkey, unwrapkey, sign, and verify."
      }
    },
    "secretsPermissionsAuditors": {
      "type": "array",
      "defaultValue": [ "list" ],
      "metadata": {
        "description": "Permissions to secrets in the vault for Auditors Team AD group. Valid values are: all, get, set, list, and delete."
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "SKU for the vault"
      }
    },
    "enableVaultForDeployment": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Specifies if the vault is enabled for a VM deployment"
      }
    },
    "enableVaultForDiskEncryption": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Specifies if the azure platform has access to the vault for enabling disk encryption scenarios."
      }
    },
    "enabledForTemplateDeployment": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
      }
    },
    "keyVaultDiagnosticsStorageAccount": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the storage account to store the key vault audit and diagnostics information"
      }
    },
    "keyVaultDiagnosticsStorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_GRS",
      "minLength": 1,
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account types"
      }
    },
    "keyVaultDiagnosticsLogEnabled": {
      "type": "bool",
      "defaultValue": "true",
      "metadata": {
        "description": "Is Key Vault diagnostics logs enabled"
      }
    },
    "keyVaultDiagnosticsLogRetentionEnabled": {
      "type": "bool",
      "defaultValue": "true",
      "metadata": {
        "description": "Is Key Vault diagnostics logs retention policy enabled"
      }
    },
    "keyVaultDiagnosticsLogRetentionDays": {
      "type": "int",
      "defaultValue": 7,
      "metadata": {
        "description": "Key Vault diagnostics logs retention policy number of days"
      }
    }
  },
  "variables": {
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('keyVaultDiagnosticsStorageAccount')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "KeyVaultDiagnosticsStorageAccounts"
      },
      "properties": {
        "accountType": "[parameters('keyVaultDiagnosticsStorageAccountType')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('keyVaultName')]",
      "apiVersion": "2015-06-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "KeyVault"
      },
      "properties": {
        "enabledForDeployment": "[parameters('enableVaultForDeployment')]",
        "enabledForDiskEncryption": "[parameters('enableVaultForDiskEncryption')]",
        "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[parameters('objectIdSecurityTeam')]",
            "permissions": {
              "keys": "[parameters('keysPermissionsSecurityTeam')]",
              "secrets": "[parameters('secretsPermissionsSecurityTeam')]"
            }
          }
          //{
          //  "tenantId": "[subscription().tenantId]",
          //  "objectId": "[parameters('objectIdDevOps')]",
          //  "permissions": {
          //    "keys": "[parameters('keysPermissionsDevOps')]",
          //    "secrets": "[parameters('secretsPermissionsDevOps')]"
          //  }
          //},
          //{
          //  "tenantId": "[subscription().tenantId]",
          //  "objectId": "[parameters('objectIdAuditors')]",
          //  "permissions": {
          //    "keys": "[parameters('keysPermissionsAuditors')]",
          //    "secrets": "[parameters('secretsPermissionsAuditors')]"
          //  }
          //}
        ],
        "sku": {
          "name": "[parameters('skuName')]",
          "family": "A"
        }
      },
      "resources": [
        {
          "type": "Microsoft.KeyVault/vaults/providers/diagnosticSettings",
          "name": "[concat(parameters('keyVaultName'), '/Microsoft.Insights/service')]",
          "apiVersion": "2015-07-01",
          "tags": {
            "displayName": "Key Vault Diagnostics"
          },
          "dependsOn": [
            "[parameters('keyVaultName')]",
            "[parameters('keyVaultDiagnosticsStorageAccount')]"
          ],
          "properties": {
            "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('keyVaultDiagnosticsStorageAccount'))]",
            "logs": [
              {
                "category": "AuditEvent",
                "enabled": "[parameters('keyVaultDiagnosticsLogEnabled')]",
                "retentionPolicy": {
                  "days": "[parameters('keyVaultDiagnosticsLogRetentionDays')]",
                  "enabled": "[parameters('keyVaultDiagnosticsLogRetentionEnabled')]"
                }
              }
            ]
          }
        }
      ]
    }
  ],
  "outputs": {
  }
}
